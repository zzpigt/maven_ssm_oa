package cn.zzpigt.service.impl;

import cn.zzpigt.bean.QueryVo;
import cn.zzpigt.bean.User;
import cn.zzpigt.bean.UserExample;
import cn.zzpigt.bean.UserExample.Criteria;
import cn.zzpigt.mybatis.mapper.UserMapper;

import java.util.List;
import java.util.Random;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.zzpigt.service.UserService;

@Service
public class UserServiceImpl implements UserService {
	@Autowired
	private UserMapper um;

	@Override
	public String getCode() {

		String str = "";
		char[] ch = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
				'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',
				'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',
				'z' };
		Random random = new Random();
		for (int i = 0; i < 4; i++) {
			char num = ch[random.nextInt(ch.length)];
			str += num;
		}
		System.out.println(str);
		return str;

	}

	@Override
	public User checkUserAndCode(QueryVo vo,HttpSession session) throws Exception {
		if (session.getAttribute("code") == null ) {
			throw new Exception("验证码为空");
		} 
		if(!session.getAttribute("code").equals(vo.getCode())){
			throw new Exception("验证码错误");
		}
		UserExample example = new UserExample();
		Criteria criteria = example.createCriteria();
		criteria.andUnameEqualTo(vo.getUser().getUname());
		List<User> list = um.selectByExample(example);

		if (list != null && list.size() > 0) {
			User user = list.get(0);
			if (user.getUpwd().equals(vo.getUser().getUpwd())) {
				return user;
			} else {
				throw new Exception("密码错误");
			}
		} else {
			throw new Exception("用户名不存在");

		}

	}

}
